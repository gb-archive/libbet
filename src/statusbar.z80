include "src/hardware.inc"
include "src/global.inc"

section "statusbarbuf",HRAM

hPctOnes: ds 1
hPctTens:: ds 1

SMALL_DIGIT_BASE equ $D0
STATUS_SLASH equ $DA
STATUS_BLANK equ $DB
BIG_DIGIT_BASE equ $DC
STATUS_PERCENT equ $F0

SMALL_SCORE_POS equ _SCRN0+32*17+14
PCTAGE_POS equ _SCRN0+32*16+9

section "load_statusbar", ROM0

;;
; Expands 1bpp tiles to shadowed 2bpp
load_statusbar_chr::
  ld de,$8000 + SMALL_DIGIT_BASE * 16
  ld hl,bigdigits_chr
  ld bc,(34<<8)|$FF  ; B: tilecount; C: notlastbyte
  .byteloop:
    ; Plane 0 is thisbyte | ~lastbyte
    ld a,[hl]
    or c
    ld [de],a
    inc de
    ; Plane 1 is thisbyte
    ld a,[hl+]
    ld [de],a
    inc de
    rra
    cpl
    ld c,a
    ; 16 byte units
    ld a,e
    and $0F
    jr nz,.byteloop
    dec b
    jr nz,.byteloop
  ret

draw_statusbar_tilemap::
  ld hl,_SCRN0+32*16
  ld a,STATUS_BLANK
  ld c,52
  call memset_tiny

  ld a,STATUS_PERCENT
  ld [PCTAGE_POS+3],a
  inc a
  ld [PCTAGE_POS+35],a

  ld hl,SMALL_SCORE_POS+2
  ld a,STATUS_SLASH
  ld [hl+],a
  ld a,[max_score]
  call bcd8bit
  or SMALL_DIGIT_BASE
  ld [hl+],a
  ld a,c
  or SMALL_DIGIT_BASE
  ld [hl+],a
  ; fall through

prepare_pctage::
  ld hl,popslide_used
  ld l,[hl]

  ; Write packet header for raw score
  ld a,low(SMALL_SCORE_POS)
  ld [hl+],a
  ld a,high(SMALL_SCORE_POS)
  ld [hl+],a
  ld a,1  ; h literal of 2
  ld [hl+],a
  inc hl

  ; Convert current score to decimal
  ld a,[cur_score]
  call bcd8bit  ; tens in A, ones in C
  or a
  jr nz,.score_more_than_ten
    ld a,STATUS_BLANK-SMALL_DIGIT_BASE
  .score_more_than_ten:
  add SMALL_DIGIT_BASE
  ld [hl+],a
  ld a,c
  add SMALL_DIGIT_BASE
  ld [hl+],a

  ; Top line of percentage
  ld a,low(PCTAGE_POS)
  ld [hl+],a
  ld a,high(PCTAGE_POS)
  ld [hl+],a
  ld a,2
  ld [hl+],a

  ; Convert current score to decimal percentage
  ld a,[max_score]
  ld c,a
  ld a,[cur_score]
  cp c
  jr c,.not_100percent
    ld de,BIG_DIGIT_BASE * $101
    ld a,BIG_DIGIT_BASE + 2
    jr .have_pctage_tiles_ade
  .not_100percent:
    ld b,a
    call pctdigit
    add a
    jr nz,.pctage_tens_nonblank
      ld a, STATUS_BLANK-BIG_DIGIT_BASE
    .pctage_tens_nonblank:
     add BIG_DIGIT_BASE
    ld d,a
    push de
    call pctdigit
    pop de
    add a
    add BIG_DIGIT_BASE
    ld e,a
    ld a,STATUS_BLANK
  .have_pctage_tiles_ade:

  ld c,a
  ld [hl+],a
  cp STATUS_BLANK
  jr z,.hundreds_is_blank
    inc c
  .hundreds_is_blank:
  ld a,d
  ld [hl+],a
  cp STATUS_BLANK
  jr z,.tens_is_blank
    inc d
  .tens_is_blank:
  ld a,e
  ld [hl+],a
  inc e

  ; Write bottom row
  ld a,low(PCTAGE_POS + 32)
  ld [hl+],a
  ld a,high(PCTAGE_POS + 32)
  ld [hl+],a
  ld a,2
  ld [hl+],a
  ld a,c
  ld [hl+],a
  ld a,d
  ld [hl+],a
  ld a,e
  ld [hl+],a

  ld a,l
  ld [popslide_used],a
  ret

section "bigdigits_chr", ROM0, align[3]
bigdigits_chr: incbin "obj/gb/bigdigits-h.chr1"