;
; Game Boy fade routine
;
; Copyright 2018 Damian Yerrick
;
; This software is provided 'as-is', without any express or implied
; warranty.  In no event will the authors be held liable for any damages
; arising from the use of this software.
; 
; Permission is granted to anyone to use this software for any purpose,
; including commercial applications, and to alter it and redistribute it
; freely, subject to the following restrictions:
; 
; 1. The origin of this software must not be misrepresented; you must not
;    claim that you wrote the original software. If you use this software
;    in a product, an acknowledgment in the product documentation would be
;    appreciated but is not required.
; 2. Altered source versions must be plainly marked as such, and must not be
;    misrepresented as being the original software.
; 3. This notice may not be removed or altered from any source distribution.
;
include "src/hardware.inc"

section "fadewram", WRAM0
fade_level: ds 1
fade_dir: ds 1
fade_bgp:: ds 1
fade_obp0:: ds 1
fade_obp1:: ds 1
fade_density:: ds 10
fade_residue: ds 10

section "fadecmds",ROM0
fade_in::
  ld hl,fade_level
  xor a
  ld [hl+], a
  ld [hl], 1   ; fade rate: 32 frames to full
  
  ld hl, fade_residue
  ld c, 10
  jp memset_tiny

fade_out::
  ld hl,fade_level
  ld a, 31
  ld [hl+],a
  ld [hl],-1
  ret

section "fade", ROM0
fade_update::
  ld hl, fade_level
  ld a, [hl+]
  add [hl]  ; A = new fade level
  cp 128
  jr c, .new_fade_level_not_negative
    ; Faded completely to white. Set both rate and level to white.
    xor a
    ld [hl-], a
    jr .have_new_fade_level
  .new_fade_level_not_negative:
  cp 31
  jr nc, .faded_completely_in
    dec hl  ; no update to fade level
    jr .have_new_fade_level
  .faded_completely_in:
    ; Faded completely in.
    xor a
    ld [hl-], a
    ld a, 31
  .have_new_fade_level:
  ld [hl], a

  ; Rescale 0-31 to 0-248 for legacy fade routine
  ; 0-31
  add a
  add a
  add a
  ld d, a

  ; Convert fade level in D to a BGP word
  ; Bit 1-0: Bit 7-6 of D
  ; Bit 3-2: Bit 7-6 of 3/4 of D
  ; Bit 4: Bit 7 of D
  ld a,$C0
  and d
  rlca
  jr nc,.nobit4
    set 3,a
  .nobit4:
  rlca
  ld b,a

  ; Now the 3/4 bit
  ld a,d
  or a
  rra
  add d
  rra
  and $C0
  swap a

  or b
  ld [fade_bgp],a
  ret